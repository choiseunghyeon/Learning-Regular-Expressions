- 북미 전화번호
- 세 자리 숫자 지역번호 세 자리 숫자 국번 하이픈 네 자리 숫자가 나오는 형식
- 예외: 지역번호와 국번은 0이나 1로 시작할 수 없다.
- 지역번호는 주로 괄호로 감싸기도 하고 실제 전화번호와 하이픈으로 구분하기도 한다. (555) 555-5555 / (555)555-5555 / 555-555-5555

예문
J. Doe: 248-555-1234
B. Smith: (313) 555-1234
A. Lee: (810)555-1234

정규표현식
\(?[2-9]\d{2}\)?(\s*|-)[2-9]\d{2}-\d{4} - 내가 푼 답
\(?[2-9]\d\d\)?[ -]?[2-9]\d\d-\d{4} - 책에서 나온 답


예문
J. Doe: 248-555-1234
B. Smith: (313) 555-1234
A. Lee: (810)555-1234
M.Jones: 734.555.9999

정규표현식
\(?[2-9]\d\d\)?[ -.]?[2-9]\d\d[-.]\d{4} - 내가 푼 답
[\(.]?[2-9]\d\d[\).]?[ -]?[2-9]\d\d[-.]\d{4} - 책에서 나온 답


- 미국 우편번호
- 5자리 숫자 우편번호 또는 5 자리 숫자 하이픈 4 자리 숫자

예문
999 1st Avenue, Bigtown, NY, 11222
123 High Street, Any City, MI 48034-1234

정규표현식
\d{5}(-\d{4})? - 책과 동일


- 캐나다 우편번호
- 문자 여섯개로 구성되며, 문자와 숫자가 번갈아 나온다.
- 처음 아노는 문자는 주를 나타내는데 18 문자만이 유효하다.

예문
123 4th Street, Toronto, Ontario, M1A 1A1
567 8th Avenue, Montreal, Quebec, H9Z 9Z9

정규표현식
[MH]\d[a-zA-Z][ ]\d[a-zA-Z]\d - 내가 푼 답
[ABCEGHJKLMNPRSTVXY]\d[A-Z] \d[A-Z]\d - 책에서 나온 답


- 영국 우편번호
- 5 | 6 | 7 자리이며, 숫자와 문자로 구성
- 외부번호(outcode) 내부번호(incode)로 나뉜다.
- 외부번호는 1 자리나 2 자리의 알파벳 문자가 오고, 이어서 1 자리나 2 자리 숫자가 온다. 또는 1 자리 숫자와 1자리 문자가 온다.
- 내부번호는 항상 1 자리 숫자 뒤에 2 자리 문자가 온다. 이때 C, I, K, M, O, V는 제외
- 외부번호와 내부번호는 공백으로 구분

예문
171 Kyverdale Road, London N16 6PS
33 Main Street, Portsmouth, P01 3AX
18 High Street, London NW11 8AB

정규표현식
[A-Z]{1,2}\d[\dA-Z]( )\d[ABD-HJLNP-UW-Z]{2} - 내가 푼 답 / 잘못된 부분: 외부번호에서 1 자리나 2자리 알파벳 뒤에 올 때 1 자리 숫자 이후 무조건 1 자리 숫자나 1자리 문자가 오도록 되어 있다. / 1 자리나 숫자 이후 1 자리 숫자나 1자리 문자는 안올 수도 있다.
[A-Z]{1,2}\d[A-Z\d]? \d[ABD-HJLNP-UW-Z]{2} - 책에서 나온 답


미국 사회보장번호
- 숫자로 구성되며, 세 묶음으로 나뉘는데, 각 부분은 하이픈으로 구분
- 첫 부분은 3 자리 숫자, 두 번째 부분은 2 자리 숫자, 마지막 부분은 4 자리 숫자

예문
John Smith: 123-45-6789

정규표현식
\d{3}-\d{2}-\d{4} - 책과 동일


- IP 주소
- 네 바이트로 이루어져있다. 각 바이트는 마침표로 구분 (1 바이트는 0~255의 정수로 표현)

예문
localhost is 127.0.0.1

정규표현식
((25[0-5]|2[0-4]\d|1\d{2}|\d{1,2})\.){3}(25[0-5]|2[0-4]\d|1\d{2}|\d{1,2}) - 책과 동일


- URL

예문
http://www.forta.com/blog
https://www.forta.com:80/blog/index.cfm
http://www.forta.com
http://ben:password@www.forta.com/
http://localhost/index.php?ab=1&c=2
http://localhost:8500/

정규표현식
http[s]?://.+[/]? - 내가 푼 답 - 잘못된 부분: 책의 의도는 프로토콜, 호스트 이름, 포트 번호와 경로가 일치하는지 확인 하는 것 118p.
https?:\/\/[-\w.]+(:\d+)?(\/([\w\/_.]*)?)? - 책에서 나온 답

- 완전한 URL
- 프로토콜, 호스트 이름, 포트 번호, 쿼리 문자열 까지 일치

예문
http://www.forta.com/blog
https://www.forta.com:80/blog/index.cfm
http://www.forta.com
http://ben:password@www.forta.com/
http://localhost/index.php?ab=1&c=2
http://localhost:8500/

정규표현식
https?://[-\w.]+(:\d+)?(/([\w/_.]*)?)?([?][\w=&]+)? - 내가 푼 답
https?:\/\/(\w*:\w*@)?[-\w.]+(:\d+)?(/([\w/_.]*(\?\S+)?)?)? - 책에서 나온 답



- 이메일 주소

예문
My name is ben Forta, and my
email address is ben@forta.com.

정규표현식

\S+@\S+[^.] - 내가 푼 답 - 잘못된 부분: 이메일 주소 규칙 잘 모름
(\w+\.)*\w+@(\w+\.)+[A-Za-z]+ - 책에서 나온 답 (완벽하진 않지만 대다수 이메일 주소를 검사할 수 있다.)

- HTML 주석
- 주석은 <!-- 과 --> 태그 사이에 위치

예문
<!-- Start of Page -->
<html>
<!-- Start of head -->
<head>
<title>My Title</title><!-- Page title -->
</head>
<!-- Body -->
<body>

정규표현식
<!--.*--> 내가 푼 답 
<!-{2,}.*?-{2,}> - 책에서 나온 답


- 자바스크립트 주석
- // 로 시작
<script language="JavaScript">
// Turn off fields used only by replace
function hideReplaceFields() {
    document.getElementById('RegExReplace').disabled=true;
    document.getElementById('replaceheader').disabled=true;
}
// Turn on fields used only by replace
function showReplaceFields() {
    document.getElementById('RegExReplace').disabled=false;
    document.getElementById('replaceheader').disabled=false;
}

정규표현식

\/\/.* - 동일



- 신용카드 번호
- 정규표현식으로 완전히 검증하지는 못하므로 마지막 검증 단계에서는 항상 카드번호 처리 관리기관과 상호작용이 필요하다.
- 하지만 데이터를 보내기 전에 카드 번호가 많거나 적은 경우처럼 잘못된 숫자를 검출하는데 유용하다.
- 모든 패턴은 빈칸이나 하이픈이 제거된 상태라고 가정
- 문제를 기반으로 푸는 방식이 아니라 패스 124p.


- 주민등록번호

예문
790814-1234567
135-600

정규표현식
\d{6}-\d{7}

예문
790814-1234567
135-600
799999-1234567
791231-1234567

정규표현식
\d{2}(1[0-2]|0[1-9])(3[01]|[12]\d|0[1-9])-\d{7} - 내가 푼 답
\d{2}(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])-\d{7} - 책에서 나온 답

- 1900년도는 주민번호 뒤 일곱 자리 숫자는 남자는 1, 여자는 2로 시작 2000년도는 남자는 3, 여자는 4로 시작
- 2월이나 4월에 31일이 나오거나 연도에 상관 없이 1,3 혹은 2,4가 나올 수 있다. 정규 표현식에 정답은 없다. 그러니 우리 스스로 얼마나 많은 범위를 처리할 것인지를 결정해야 한다.
예문
790814-1234567
135-600
799999-1234567
080601-3456789
791231-1234567
830105-5678123
100406-4567890

정규표현식
\d{2}(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])-[1-4]\d{6} - 동일


- 미국식 날짜 형식을 국제표준(ISO 8601) 날짜 형식으로 바꾸기
- mm/dd/yyyy -> yyyy-mm-dd

예문
08/14/1979

정규 표현식
(\d{2})\/(\d{2})\/(\d{4})

치환
$3-$1-$2

str.replace(/(\d{2})\/(\d{2})\/(\d{4})/g, '$3-$1-$2')


- 함수 이름 바꾸기
- get_id -> get_userid 그리고 account에 있는 id -> userid
예문
def get_id(account):
    return account['id']
def get_idle_time():
    conf = load_conf('default.conf')
    return account['idle_time']

정규표현식
id(?=[(')]) - 내가 푼 답
([_'])(id)(['()]) 책에서 나온 답

치환
userid - 내가 푼 답
$1userid$3 - 책에서 나온 답

- 정규표현식과 한글과 유니코드

- 한글 일치시키기

예문
안녕하세요? 인사이트출판사입니다.

정규표현식
인사이트출판사


예문
국어: 수
영어: 수
수학: 수
미술: 양
체육: 가

정규표현식
(\s)(수|우|미|양|가)(\s)

- 유니코드 일치시키기
- 140p.